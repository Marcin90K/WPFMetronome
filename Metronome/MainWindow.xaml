<Window x:Class="Metronome.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Title="Metronome" Height="550" Width="350" ResizeMode="NoResize"
        Name="win" WindowStartupLocation="CenterScreen"
        WindowStyle="None" AllowsTransparency="True" 
        Background="Transparent"
        MouseLeftButtonDown="win_MouseLeftButtonDown">
    <Window.Resources>
        <Style TargetType="Border" x:Key="StyleTopBorder">
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="BorderBrush" Value="Black" />
            <Setter Property="Width" Value="20" />
            <Setter Property="Height" Value="20" />
        </Style>
        <Style TargetType="Line" x:Key="StyleTopLine">
            <Setter Property="Stroke" Value="AntiqueWhite" />
            <Setter Property="StrokeThickness" Value="3" />
        </Style>
        <Style x:Key="TextStyle" TargetType="TextBlock">
            <Setter Property="FontSize" Value="14" />
            <Setter Property="FontStyle" Value="Italic" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="Foreground" Value="White" />
        </Style>
        <Style x:Key="StyleLine" TargetType="Line">
            <Setter Property="RenderTransform">
                <Setter.Value>
                    <TranslateTransform X="0" Y="0" />
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="StyleEllipse" TargetType="Ellipse">
            <Setter Property="Width" Value="30" />
            <Setter Property="Height" Value="30" />
            <Setter Property="Fill">
                <Setter.Value>
                    <LinearGradientBrush StartPoint="0.5,1">
                        <GradientStop Color="#FFFF0200" Offset="0.2" />
                        <GradientStop Color="#FFA5892A" Offset="1" />
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="RenderTransform">
                <Setter.Value>
                    <TranslateTransform X="0" Y="0" />
                </Setter.Value>
            </Setter>           
        </Style>
        <Style x:Key="FigureStyle" TargetType="Path">
            <Setter Property="Stroke" Value="Black" />
            <Setter Property="StrokeThickness" Value="2" />
            <Setter Property="Fill" Value="Red" />
            <Setter Property="Cursor" Value="Hand" />
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Effect">
                        <Setter.Value>
                            <DropShadowEffect BlurRadius="20" />
                        </Setter.Value>
                    </Setter>
                </Trigger>
            <EventTrigger RoutedEvent="MouseEnter">
                <BeginStoryboard>
                    <Storyboard>
                            <ColorAnimation Storyboard.TargetProperty="Fill.Color" To="Coral" Duration="0:0:0.5" AccelerationRatio="0.4" />
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
            <EventTrigger RoutedEvent="MouseLeave">
                <BeginStoryboard>
                    <Storyboard>
                        <ColorAnimation Storyboard.TargetProperty="Fill.Color" To="Red" Duration="0:0:0.5" AccelerationRatio="0.4" />
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="BorderButtonStyle" TargetType="Border">
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Effect">
                                <Setter.Value>
                                    <DropShadowEffect BlurRadius="50" ShadowDepth="2" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>                 
            </Style.Triggers>            
            <Setter Property="Cursor" Value="Hand" />  
        </Style>
        <Style x:Key="ButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="Red" />
            <Setter Property="BorderBrush" Value="Black" />
            <Setter Property="BorderThickness" Value="1" />
        </Style>
        
        <ControlTemplate x:Key="ButtonTemplate" TargetType="Button">           
            <Grid>
                <Border Name="butBorder1" Background="Black" Margin="6,6,3,3" CornerRadius="5"  />

                <Border Name="butBorder2" Background="Red" Margin="3,3,6,6" CornerRadius="5" >
                    <TextBlock  Text="START" VerticalAlignment="Center" HorizontalAlignment="Center" />
                </Border>
            </Grid>
        </ControlTemplate>
        
        <Storyboard x:Key="SBpanelForward">
            <DoubleAnimation Storyboard.TargetName="gridChild1" Storyboard.TargetProperty="Height" From="0"
                             To="{Binding ElementName=canvas1, Path=ActualHeight}" Duration="0:0:1" AccelerationRatio="0.5" /> 
        </Storyboard>
        <Storyboard x:Key="SBpanelBack">
            <DoubleAnimation Storyboard.TargetName="gridChild1" Storyboard.TargetProperty="Height" From="{Binding ElementName=canvas1, Path=ActualHeight}"
                             To="0" Duration="0:0:1" AccelerationRatio="0.5" />
        </Storyboard>
        <Storyboard x:Key="LineAnimLeft" Completed="StoryboardLeft_Completed">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="line1" Storyboard.TargetProperty="X2"  
                                           Duration="{Binding ElementName=win, Path=DataContext}" >
                <LinearDoubleKeyFrame Value="-100" KeyTime="50%" />
                <LinearDoubleKeyFrame Value="0" KeyTime="100%" />
                <EasingDoubleKeyFrame>
                    <EasingDoubleKeyFrame.EasingFunction>
                        <ExponentialEase EasingMode="EaseOut" />
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>

            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="line1" Storyboard.TargetProperty="Y2" 
                                           Duration="{Binding ElementName=win, Path=DataContext}" >
                <LinearDoubleKeyFrame Value="150" KeyTime="50%" />
                <LinearDoubleKeyFrame Value="200" KeyTime="100%" />
                <EasingDoubleKeyFrame>
                    <EasingDoubleKeyFrame.EasingFunction>
                        <ExponentialEase EasingMode="EaseOut" />
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>

            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ellipse1" Storyboard.TargetProperty="RenderTransform.(TranslateTransform.X)"
                              Duration="{Binding ElementName=win, Path=DataContext}" >
                <LinearDoubleKeyFrame Value="-100" KeyTime="50%" />
                <LinearDoubleKeyFrame Value="0" KeyTime="100%" />
                <EasingDoubleKeyFrame>
                    <EasingDoubleKeyFrame.EasingFunction>
                        <ExponentialEase EasingMode="EaseOut" />
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>

            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ellipse1" Storyboard.TargetProperty="RenderTransform.(TranslateTransform.Y)"
                              Duration="{Binding ElementName=win, Path=DataContext}" >
                <LinearDoubleKeyFrame Value="-50" KeyTime="50%" />
                <LinearDoubleKeyFrame Value="0" KeyTime="100%" />
                <EasingDoubleKeyFrame>
                    <EasingDoubleKeyFrame.EasingFunction>
                        <ExponentialEase EasingMode="EaseOut" />
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="LineAnimRight" Completed="StoryboardRight_Completed">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="line1" Storyboard.TargetProperty="X2"  
                                           Duration="{Binding ElementName=win, Path=DataContext}" >
                <LinearDoubleKeyFrame Value="100" KeyTime="50%" />
                <LinearDoubleKeyFrame Value="0" KeyTime="100%" />
                <EasingDoubleKeyFrame>
                    <EasingDoubleKeyFrame.EasingFunction>
                        <ExponentialEase EasingMode="EaseOut" />
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>

            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="line1" Storyboard.TargetProperty="Y2" 
                                           Duration="{Binding ElementName=win, Path=DataContext}" >
                <LinearDoubleKeyFrame Value="150" KeyTime="50%" />
                <LinearDoubleKeyFrame Value="200" KeyTime="100%" />
                <EasingDoubleKeyFrame>
                    <EasingDoubleKeyFrame.EasingFunction>
                        <ExponentialEase EasingMode="EaseOut" />
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>

            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ellipse1" Storyboard.TargetProperty="RenderTransform.(TranslateTransform.X)"
                              Duration="{Binding ElementName=win, Path=DataContext}" >
                <LinearDoubleKeyFrame Value="100" KeyTime="50%" />
                <LinearDoubleKeyFrame Value="0" KeyTime="100%" />
                <EasingDoubleKeyFrame>
                    <EasingDoubleKeyFrame.EasingFunction>
                        <ExponentialEase EasingMode="EaseOut" />
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>

            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ellipse1" Storyboard.TargetProperty="RenderTransform.(TranslateTransform.Y)"
                              Duration="{Binding ElementName=win, Path=DataContext}" >
                <LinearDoubleKeyFrame Value="-50" KeyTime="50%" />
                <LinearDoubleKeyFrame Value="0" KeyTime="100%" />
                <EasingDoubleKeyFrame>
                    <EasingDoubleKeyFrame.EasingFunction>
                        <ExponentialEase EasingMode="EaseOut" />
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        
        <Storyboard x:Key="CanvasOpacityAnim">
            <DoubleAnimation Storyboard.TargetName="canvas1" Storyboard.TargetProperty="Opacity" From="1"
                             To="0.25" Duration="0:0:1" />
        </Storyboard>
        <Storyboard x:Key="LineThicknessAnim">
            <DoubleAnimation Storyboard.TargetName="lineMain" Storyboard.TargetProperty="StrokeThickness" 
                                From="2" To="5" Duration="0:0:1" />
        </Storyboard>
        <Storyboard x:Key="ColorAnim">
            <ColorAnimation Storyboard.TargetName="canvas1" Storyboard.TargetProperty="(Canvas.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)"
                            From="Aquamarine"  To="#FF00FFA9" Duration="{Binding ElementName=win, Path=DataContext}" />
            <ColorAnimation Storyboard.TargetName="canvas1" Storyboard.TargetProperty="(Canvas.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)"
                            From="#FFFFBC50"  To="#FFFF9D00" Duration="{Binding ElementName=win, Path=DataContext}" />
        </Storyboard>
    </Window.Resources>
    
    <DockPanel>
        <DockPanel.Background>
            <LinearGradientBrush StartPoint="0,1">
                <GradientStop Color="#FF3E5487" Offset="0.279" />
                <GradientStop Color="AliceBlue" Offset="1.5" />
            </LinearGradientBrush>
        </DockPanel.Background>
        <!--Top bar with widow title and 2 buttons-->
        <DockPanel Name="topBarPanel" DockPanel.Dock="Top"  Background="#FF0C064F" Margin="0,0,0,10"
                   MinHeight="30">
            <Border Name="CloseBorder" Style="{StaticResource StyleTopBorder}" DockPanel.Dock="Right"
                    Margin="5,0,5,0" >
                <Grid MouseLeftButtonDown="CloseBorder_MouseLeftButtonDown">
                    <Line X1="0" Y1="0" X2="20" Y2="20" Style="{StaticResource StyleTopLine}" />
                    <Line X1="20" Y1="0" X2="0" Y2="20" Style="{StaticResource StyleTopLine}" />
                </Grid>
            </Border>
            <Border Name="MinimizeBorder" Style="{StaticResource StyleTopBorder}" DockPanel.Dock="Right"
                    MouseLeftButtonDown="MinimizeBorder_MouseLeftButtonDown">
                <Line X1="0" Y1="17" X2="20" Y2="17" Style="{StaticResource StyleTopLine}"  />
            </Border>
            <TextBlock Name="TitleTextBlock" Text=" WPF Metronome " FontWeight="Bold" FontSize="16"
                       Foreground="AntiqueWhite" VerticalAlignment="Center" DockPanel.Dock="Right"/>
        </DockPanel>

        <StackPanel DockPanel.Dock="Top" Margin="{Binding ElementName=canvas1, Path=Margin}">           
            <Border Name="borderTop" BorderBrush="Black" BorderThickness="1" Background="Coral" MouseLeftButtonDown="buttonTop_Click">
                <TextBlock Text="Options" Style="{StaticResource TextStyle}"  />                 
            </Border>
        </StackPanel>
        <Grid Name="parentGrid">
            <Grid.RowDefinitions>
                <RowDefinition Height="2.5*" />
                <RowDefinition Height="1.5*" />
            </Grid.RowDefinitions>
            <Grid.Background>
                <LinearGradientBrush StartPoint="0,1">
                    <GradientStop Color="#FF3E5487" Offset="0.279" />
                    <GradientStop Color="AliceBlue" Offset="1.5" />
                </LinearGradientBrush>
            </Grid.Background>
            
            <MediaElement Name="media1" Source="MetroBar1.wav" LoadedBehavior="Manual"  Volume="{Binding ElementName=sliderVolume, Path=Value}"/>
            <MediaElement Name="media2" Source="MetroBeat1.wav" LoadedBehavior="Manual" Volume="{Binding ElementName=sliderVolume, Path=Value}" />
            <MediaElement Name="media3" Source="Metro3.wav" LoadedBehavior="Manual" Volume="{Binding ElementName=sliderVolume, Path=Value}" />
            <MediaElement Name="media4" Source="Metro4.wav" LoadedBehavior="Manual" Volume="{Binding ElementName=sliderVolume, Path=Value}" />
            <MediaElement Name="media5" Source="Metro5.wav" LoadedBehavior="Manual" Volume="{Binding ElementName=sliderVolume, Path=Value}" />
            <MediaElement Name="media6" Source="Metro6.wav" LoadedBehavior="Manual" Volume="{Binding ElementName=sliderVolume, Path=Value}" />
            <!--Panel for showing animation-->
            <Canvas Name="canvas1" Grid.Row="0" Margin="5,0" >
                <Canvas.Background>
                    <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                        <GradientStop Color="Aquamarine" Offset="0.058" x:Name="grad1" />
                        <GradientStop Color="#FFFFBC50" Offset="1" /> 
                    </LinearGradientBrush>
                </Canvas.Background>
                <Line Name="lineMain" X1="160" Y1="1" X2="160" Y2="295" Stroke="Coral" StrokeThickness="2" StrokeDashArray="5,2"  />
                <Line Name="lineLeft" X1="40" Y1="140" X2="40" Y2="180" Stroke="#FF59DE41" StrokeThickness="2"  />
                <Line Name="lineRight" X1="280" Y1="140" X2="280" Y2="180" Stroke="#FF59DE41" StrokeThickness="2"  />
                <Line Name="line1" X1="0" Y1="0" X2="0" Y2="200" Stroke="Red" StrokeThickness="4" Style="{StaticResource StyleLine}"
                  Canvas.Top="20" Canvas.Left="160"/>
                <Ellipse Name="ellipse1"  Style="{StaticResource StyleEllipse}"
                     Canvas.Top="210" Canvas.Left="145" />
                
                <!--Grid with option controls (by default is collapsed) -->
                <Grid Name="gridChild1" Canvas.Top="0" SizeChanged="gridChild1_SizeChanged" 
                  Width="{Binding ElementName=canvas1, Path=ActualWidth}" Height="0" >
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="2*" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="4*" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>
                    <Grid.Background>
                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                            <GradientStop Color="Coral" Offset="0.3" />
                            <GradientStop Color="#FFEAB876" Offset="0.604" />
                        </LinearGradientBrush>
                    </Grid.Background>
                    <GroupBox Header="Sounds" Grid.Column="0" Grid.Row="0">
                        <StackPanel>
                            <RadioButton Name="radio1" Content="Sound 1" Checked="radio1_Checked" Margin="5" IsChecked="True" />
                            <RadioButton Name="radio2" Content="Sound 2" Checked="radio2_Checked" Margin="5"/>
                            <RadioButton Name="radio3" Content="Sound 3" Checked="radio3_Checked" Margin="5"/>
                            <RadioButton Name="radio4" Content="Sound 4" Checked="radio4_Checked" Margin="5"/>
                            <RadioButton Name="radio5" Content="Sound 5" Checked="radio5_Checked"  Margin="5"/>
                            <RadioButton Name="radio6" Content="Sound 6" Checked="radio6_Checked"  Margin="5"/>
                        </StackPanel>
                    </GroupBox>
                    <GroupBox Header="Volume" Grid.Column="1" Grid.Row="0">
                        <DockPanel>
                            <Slider Name="sliderVolume"  Orientation="Vertical" DockPanel.Dock="Left" Minimum="0" Maximum="1"
                                    SmallChange="1" Margin="5,10" TickPlacement="BottomRight" TickFrequency="10"
                                    Value="{Binding ElementName=media1, Path=Volume}" ValueChanged="sliderVolume_ValueChanged"/>
                            <DockPanel ClipToBounds="True">
                                <Label Content="100" DockPanel.Dock="Top" />
                                <Label Content="0"  VerticalAlignment="Bottom"/>
                            </DockPanel>
                        </DockPanel>
                    </GroupBox>
                </Grid>
            </Canvas>
            
            <!--Border with controls at the bottom of layout -->
            <Border Name="border1" Grid.Row="1" Margin="{Binding ElementName=canvas1, Path=Margin}"
                    BorderThickness="1" BorderBrush="Black" CornerRadius="5">
                <Grid Name="childGrid1" Grid.Row="1" Background="Transparent">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="3.5*" />
                        <RowDefinition Height="3*" />
                        <RowDefinition Height="3*" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>
                    <StackPanel Height="{Binding ElementName=plusPath, Path=ActualHeight}" Width="{Binding ElementName=minusPath, Path=ActualWidth}"
                            Orientation="Vertical" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,155,0">
                        <Canvas Name="canvas2" >
                            <Border Name="borderAmount"  Height="40" Width="70" Background="Red" BorderBrush="Black" BorderThickness="1" Canvas.Left="55">
                                <TextBox Name="textboxAmount"   Margin="3,7,3,3" HorizontalContentAlignment="Center"
                                 VerticalContentAlignment="Center" FontSize="20"  />  
                            </Border>
                            <Path Name="minusPath" Style="{StaticResource FigureStyle}" MouseDown="minusPath_MouseDown">
                                <Path.Data>
                                    <PathGeometry>
                                        <PathFigure StartPoint="0,20" IsClosed="True">
                                            <PolyLineSegment Points="0,30 30,30 30,20 " />
                                        </PathFigure>
                                    </PathGeometry>
                                </Path.Data>
                            </Path>                            
                            <Path Name="plusPath" Style="{StaticResource FigureStyle}" MouseDown="plusPath_MouseDown" >
                                <Path.Data>
                                    <PathGeometry>
                                        <PathFigure StartPoint="150,20" IsClosed="True" >
                                            <PolyLineSegment Points="150,30 160,30 160,40 170,40 170,30 180,30 180,20 170,20 170,10 160,10 160,20 " />
                                        </PathFigure>
                                    </PathGeometry>
                                </Path.Data>
                            </Path>     
                        </Canvas>                     
                    </StackPanel>
                    <Grid Name="gridchild2" Grid.Row="1" >
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="6*" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <TextBlock Text="0" Grid.Column="0" FontSize="16" Foreground="AntiqueWhite" HorizontalAlignment="Right" Margin="0,10" />
                        <Slider Name="slider1" Value="{Binding ElementName=textboxAmount, Path=Text, Mode=TwoWay}" Margin="10" Minimum="0" Maximum="200" 
                                IsSnapToTickEnabled="True" TickFrequency="0.1" SmallChange="0.1" ValueChanged="slider1_ValueChanged" HorizontalAlignment="Stretch"
                                Grid.Column="1"/>
                        <TextBlock Text="200" Grid.Column="2" FontSize="16" Foreground="AntiqueWhite" HorizontalAlignment="Left" Margin="0,10"/>
                    </Grid>
                    
                    <Grid Name="childGrid2" Grid.Row="2">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="5*" />
                            <ColumnDefinition Width="4*" />
                            <ColumnDefinition Width="5*" />
                        </Grid.ColumnDefinitions> 
                        <Border  Grid.Column="1" Style="{StaticResource BorderButtonStyle}" MouseLeftButtonDown="buttonStart_Click" >
                            <Border Name="borderButStart"  BorderBrush="Black" BorderThickness="1" CornerRadius="5">
                                <Border.Background>
                                    <SolidColorBrush x:Name="borderBackground" Color="Red" />
                                </Border.Background>
                                <Border.Triggers>
                                    <EventTrigger RoutedEvent="Border.MouseEnter">
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ColorAnimation Storyboard.TargetProperty="Color" Storyboard.TargetName="borderBackground" To="Coral" Duration="0:0:0.5" AccelerationRatio="0.4" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </EventTrigger>
                                    <EventTrigger RoutedEvent="MouseLeave">
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ColorAnimation Storyboard.TargetProperty="Color" Storyboard.TargetName="borderBackground" To="Red" Duration="0:0:0.5" AccelerationRatio="0.4" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </EventTrigger>
                                </Border.Triggers>
                                <TextBlock Name="textBl_borderStart" Text="START" FontSize="16" VerticalAlignment="Center" HorizontalAlignment="Center" />
                            </Border>
                        </Border>
                    </Grid> 
                </Grid>
            </Border>
        </Grid>
    </DockPanel>
</Window>
